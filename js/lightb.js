// Generated by CoffeeScript 1.7.1
(function() {
  var Box, Image, ImageList, LightB, Navigation,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Image = (function() {
    function Image(dom, list) {
      var clickHandler, self;
      this.dom = dom;
      this.list = list;
      self = this;
      clickHandler = function() {
        window.LightB.display(self);
        return false;
      };
      this.href = jQuery(this.dom).attr('href');
      jQuery(this.dom).click(clickHandler);
    }

    Image.prototype.href = Image.href;

    Image.prototype.list = Image.list;

    return Image;

  })();

  ImageList = (function(_super) {
    __extends(ImageList, _super);

    function ImageList() {
      var arg, args, self;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      self = this;
      args = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = args.length; _i < _len; _i++) {
          arg = args[_i];
          _results.push(new Image(arg, self));
        }
        return _results;
      })();
      this.push.apply(this, args);
    }

    return ImageList;

  })(Array);

  Navigation = (function() {
    function Navigation() {
      this.dom = jQuery("<nav class='lightb-nav' style='display:none'></nav>");
      this.prevButton = jQuery("<a class='lightb-prev-extend' href='#'><div class='lightb-prev lightb-button'></div></a>");
      this.nextButton = jQuery("<a class='lightb-next-extend' href='#'><div class='lightb-next lightb-button'></div></a>");
      jQuery(this.dom).append(this.prevButton).append(this.nextButton);
    }

    Navigation.prototype.dom = Navigation.dom;

    Navigation.prototype.show = function(image, imageDom) {
      jQuery(this.dom).show();
      if (image && imageDom) {
        return this.reset(image, imageDom);
      }
    };

    Navigation.prototype.hide = function() {
      return jQuery(this.dom).hide();
    };

    Navigation.prototype.reset = function(image, imageDom) {
      var list;
      list = image.list;
      jQuery(this.dom).width(jQuery(imageDom).width()).find('.off').removeClass('off').find('a').off('click');
      if (list.indexOf(image) === 0) {
        jQuery('.lightb-button', this.prevButton).addClass('off');
      } else {
        jQuery(this.prevButton).on('click', (function(_this) {
          return function() {
            return window.LightB.display(list[list.indexOf(image) - 1]);
          };
        })(this));
      }
      if (list.indexOf(image) === list.length - 1) {
        return jQuery('.lightb-button', this.nextButton).addClass('off');
      } else {
        return jQuery(this.nextButton).on('click', (function(_this) {
          return function() {
            return window.LightB.display(list[list.indexOf(image) + 1]);
          };
        })(this));
      }
    };

    return Navigation;

  })();

  Box = (function() {
    function Box() {
      this.display = __bind(this.display, this);
      this.hide = __bind(this.hide, this);
      this.show = __bind(this.show, this);
      this.dom = jQuery('<div class="lightb-target off"><a class="lightb-close lightb-button" href="#"></a></div>');
      this.nav = new Navigation;
      jQuery('body').append(this.dom);
      jQuery(this.dom).append(this.nav.dom);
      jQuery(this.dom).on('click', '.lightb-close', this.hide);
    }

    Box.prototype.show = function() {
      return jQuery(this.dom).show(0, (function(_this) {
        return function() {
          return jQuery(_this.dom).removeClass('off').addClass('on');
        };
      })(this));
    };

    Box.prototype.hide = function() {
      var handleHide;
      handleHide = (function(_this) {
        return function() {
          jQuery(_this.dom).hide();
          jQuery(_this.dom).find('.lightb-image').remove();
          return _this.nav.hide();
        };
      })(this);
      this.nav.hide();
      jQuery(this.dom).removeClass('on').addClass('off');
      return setTimeout(handleHide, 500);
    };

    Box.prototype.display = function(image) {
      var imageDom;
      imageDom = jQuery("<img class='lightb-image' src='" + image.href + "' />");
      jQuery(this.dom).find('.lightb-image').remove();
      jQuery(this.dom).append(imageDom);
      this.show();
      return imageDom.one('load', (function(_this) {
        return function() {
          if (image.list) {
            return _this.nav.show(image, imageDom);
          }
        };
      })(this));
    };

    return Box;

  })();

  LightB = (function() {
    var LightBKeyHandler;

    function LightB() {
      this.box = new Box;
      this.initialize();
    }

    LightB.prototype.initialize = function() {
      jQuery(document).on('keyup', LightBKeyHandler);
      return jQuery('[data-lightbox]').each(function(i, elem) {
        var images;
        if (jQuery(elem).is('a')) {
          return new Image(elem);
        } else {
          images = jQuery(elem).find('a:has(>img)').toArray();
          return (function(func, args, ctor) {
            ctor.prototype = func.prototype;
            var child = new ctor, result = func.apply(child, args);
            return Object(result) === result ? result : child;
          })(ImageList, images, function(){});
        }
      });
    };

    LightBKeyHandler = function(e) {
      if (e.which === 27) {
        return window.LightB.box.hide();
      }
    };

    LightB.prototype.display = function(image) {
      return this.box.display(image);
    };

    return LightB;

  })();

  window.LightB = new LightB;

}).call(this);
